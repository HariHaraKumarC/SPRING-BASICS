<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Setter based DI -->
    <bean id="addressBean" class="hari.edu.spring.pojo.Address">
        <property name="streetName" value="15-1-7 VOC STREET"/>
        <property name="country" value="INDIA"/>
        <property name="zipCode" value="625513"/>
    </bean>

    <!-- Constructor based DI -->
    <bean id="employeeBean" class="hari.edu.spring.pojo.Employee">
        <constructor-arg index="0" value="1"/>
        <constructor-arg index="1" value="Hari"/>
        <constructor-arg index="2" ref="addressBean"/>
    </bean>

    <!-- Constructor based DI (set) -->
    <bean id="walletBean" class="hari.edu.spring.pojo.Wallet">
        <constructor-arg index="0" value="3"/>
        <constructor-arg>
            <set>
                <value>Resident Card</value>
                <value>Debit Card</value>
                <value>Credit Card</value>
            </set>
        </constructor-arg>
    </bean>

    <!-- Constructor based DI (list) -->
    <bean id="trallyBean" class="hari.edu.spring.pojo.Trally">
        <constructor-arg index="0" value="20"/>
        <constructor-arg index="1" value="30"/>
        <constructor-arg>
            <list>
                <value>Apple</value>
                <value>Apple</value>
                <value>Orange</value>
                <value>Pomegranate</value>
            </list>
        </constructor-arg>
    </bean>

    <!-- Setter based DI -->
    <bean id="residentCardBean" class="hari.edu.spring.pojo.ResidentCard">
        <property name="residentCardNumber" value="123456789"/>
    </bean>

    <!-- Setter based DI -->
    <bean id="residentBean" class="hari.edu.spring.pojo.Resident">
        <property name="name" value="HariHaraKumar"/>
        <property name="mobileNumber" value="465254789"/>
    </bean>

    <!-- Setter based DI (Map) -->
    <bean id="communeBean" class="hari.edu.spring.pojo.Commune">
        <property name="communeName" value="Etterbeek Commune"/>
        <property name="communeAddress" value="15 Rue de la Franc, 1040 Etterbeek"/>
        <property name="residentDetails">
            <map>
                <entry key-ref="residentCardBean" value-ref="residentBean"/>
            </map>
        </property>
    </bean>

    <!-- Autowiring  by Name-->
    <!--<bean id= "books" class="hari.edu.spring.pojo.Book">
        <property name="name" value="Thiruvasagam"/>
    </bean>

    <bean id="authorBean" class="hari.edu.spring.pojo.Author" autowire="byName">
        <property name="name" value="Manivasakar"/>
    </bean>-->

    <!-- Autowiring  by Type-->
    <!--<bean id= "bookBean" class="hari.edu.spring.pojo.Book">
        <property name="name" value="Thiruvasagam"/>
    </bean>

    <bean id="authorBean" class="hari.edu.spring.pojo.Author" autowire="byType">
        <property name="name" value="Manivasakar"/>
    </bean>-->

    <!-- Autowiring  Constructor-->
    <!--<bean id= "bookBean" class="hari.edu.spring.pojo.Book">
        <property name="name" value="Thiruvasagam"/>
    </bean>

    <bean id="authorBean" class="hari.edu.spring.pojo.Author" autowire="constructor">
        <property name="name" value="Manivasakar"/>
    </bean>-->

    <!-- Autowiring  No-->
    <bean id= "bookBean" class="hari.edu.spring.pojo.Book">
        <property name="name" value="Thiruvasagam"/>
    </bean>

    <bean id="authorBean" class="hari.edu.spring.pojo.Author" autowire="no">
        <constructor-arg index="0" value="Manivasakar"/>
        <constructor-arg index="1">
            <list>
                <ref bean="bookBean"/>
            </list>
        </constructor-arg>
    </bean>

    <!-- Factory Method  DI Example Type 1-->
    <bean id="mobileBean1" class="hari.edu.spring.pojo.Mobile" factory-method="getMobile">
        <property name="brand" value="APPLE"/>
        <property name="model" value="IPHONE 6S"/>
    </bean>

    <bean id="mobileBean2" class="hari.edu.spring.pojo.Mobile" factory-method="getMobile">
        <property name="brand" value="LENOVA"/>
        <property name="model" value="VIBE"/>
    </bean> <!-- MobileBean1 property will be override by MobileBean2 because of singleton nature -->

    <!-- Factory Method  DI Example Type 2 (Static factory method returning instance of another class) -->
    <bean id="staticPrintFactoryBean" class="hari.edu.spring.pojo.StaticPrinterFactory" factory-method="getPrinter">
        <constructor-arg index="0" value="Print Message 1"/>
    </bean>

    <!-- Factory Method  DI Example Type 3 (Non Static factory method returning instance of another class) -->
    <bean id="nonStaticPrintFactoryBean" class="hari.edu.spring.pojo.NonStaticPrinterFactory"/>

    <bean id="printerBean" class="hari.edu.spring.pojo.NonStaticPrinterFactory" factory-bean="nonStaticPrintFactoryBean" factory-method="getPrinter">
        <constructor-arg index="0" value="Print Message 2"/>
    </bean>

    <!-- Spring AOP Concepts without any Advise -->
    <bean id="customerBean1" class="hari.edu.spring.pojo.Customer">
        <constructor-arg index="0" value="Hari"/>
        <constructor-arg index="1" value="29"/>
    </bean>

    <!-- Spring AOP Concepts (Before Advise) -->
    <bean id="customerBean2" class="hari.edu.spring.pojo.Customer">
        <constructor-arg index="0" value="Usha"/>
        <constructor-arg index="1" value="24"/>
    </bean>

    <bean id="aopBeforeAdvice1" class="hari.edu.spring.aop.AOPBeforeAdvice"/>

    <bean id="customerProxyBean1" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerBean2"/>
        <property name="interceptorNames">
            <list>
                <value>aopBeforeAdvice1</value>
            </list>
        </property>
    </bean>

    <!-- Spring AOP Concepts (After Advise) -->
    <bean id="customerBean3" class="hari.edu.spring.pojo.Customer">
        <constructor-arg index="0" value="Raja"/>
        <constructor-arg index="1" value="23"/>
    </bean>

    <bean id="aopAfterAdvice1" class="hari.edu.spring.aop.AOPAfterAdvice"/>

    <bean id="customerProxyBean2" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerBean3"/>
        <property name="interceptorNames">
            <list>
                <value>aopAfterAdvice1</value>
            </list>
        </property>
    </bean>

    <!-- Spring AOP Concepts (After Throw Advise) -->
    <bean id="customerBean4" class="hari.edu.spring.pojo.Customer">
        <constructor-arg index="0" value="Abi"/>
        <constructor-arg index="1" value="15"/>
    </bean>

    <bean id="aopAfterThrowAdvice1" class="hari.edu.spring.aop.AOPAfterThrowAdvice"/>

    <bean id="customerProxyBean3" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerBean4"/>
        <property name="interceptorNames">
            <list>
                <value>aopAfterThrowAdvice1</value>
            </list>
        </property>
    </bean>

    <!-- Spring AOP Concepts (Around Advise) -->
    <bean id="customerBean5" class="hari.edu.spring.pojo.Customer">
        <constructor-arg index="0" value="Sanjay"/>
        <constructor-arg index="1" value="19"/>
    </bean>

    <bean id="aopAroundAdvice1" class="hari.edu.spring.aop.AOPAroundAdvice"/>

    <bean id="customerProxyBean4" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerBean5"/>
        <property name="interceptorNames">
            <list>
                <value>aopAroundAdvice1</value>
            </list>
        </property>
    </bean>

    <!-- Spring AOp Pointcut Example -->

    <bean id="customerBean6" class="hari.edu.spring.pojo.Customer">
        <constructor-arg index="0" value="Venkat"/>
        <constructor-arg index="1" value="31"/>
    </bean>

    <bean id="aopBeforeAdvice2" class="hari.edu.spring.aop.AOPBeforeAdvice"/>

    <!-- Pointcut -->
    <bean id="customerPointcut1" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="checkAge"/>
    </bean>

    <!-- Defaullt Pointcut Advisor -->
    <!--<bean id="customerAdvisor1" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut" ref="customerPointcut1"/>
        <property name="advice" ref="aopBeforeAdvice2"/>
    </bean>-->

    <!--&lt;!&ndash; Name Match Pointcut Advisor &ndash;&gt;
    <bean id="customerAdvisor1" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="mappedName" value="checkAge"/>
        <property name="advice" ref="aopBeforeAdvice2"/>
    </bean>-->

    <!-- Regex Match Pointcut Advisor -->
    <bean id="customerAdvisor1" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="patterns">
            <list>
                <value>.*age.*</value>
            </list>
        </property>
        <property name="advice" ref="aopBeforeAdvice2"/>
    </bean>

    <!-- Proxy -->
    <bean id="customerProxyBean5" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerBean6"/>
        <property name="interceptorNames">
            <list>
                <value>customerAdvisor1</value>
            </list>
        </property>
    </bean>

</beans>